@model TicketingSystem.Models.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="container mt-4">
    @if (Model.IsTechnician)
    {
        <div class="row justify-content-center mb-4">
            <div class="col-md-8 col-lg-6 text-center">
                <div class="card border card-shadow shadow-lg h-100">
                    <div class="card-body d-flex flex-column justify-content-center align-items-center p-5">
                        <h2 class="card-title mb-3">Hello, Technician!</h2>
                        <hr />
                        <br />
                        <p class="card-text mb-4">
                            Click below to view and manage tickets opened in the past week.
                        </p>
                        <a asp-controller="ViewTickets" asp-action="Index" class="btn btn-dark btn-lg px-4">
                            View Tickets
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }else if (Model.Tickets.Any())
    {
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Ticket History</h1>
        </div>
        <div class="row">
            @foreach (var ticket in Model.Tickets)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">@ticket.Title</h5>
                            <span class="badge @GetPriorityBadgeClass(ticket.Priority)">@ticket.Priority</span>
                        </div>
                        <div class="card-body">
                            <p class="text-muted small">
                                <strong>ID:</strong> @ticket.TicketId.Substring(0, 8)...
                            </p>

                            <p class="text-muted small">
                                <strong>Description:</strong>
                                @(ticket.Description.Length > 100 ? ticket.Description.Substring(0, 100) + "..." : ticket.Description)
                            </p>

                            <div class="mt-2">
                                <p class="text-muted small">
                                    <strong>Attachments:</strong> @ticket.imageUrls.Count
                                </p>
                            </div>
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <span class="badge @GetStatusBadgeClass(ticket.Status)">@ticket.Status</span>
                            <small class="text-muted">@ticket.SubmittedAt.ToString("MMM dd, yyyy HH:mm")</small>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p>No tickets found.</p>
    }
</div>

@functions {
    string GetPriorityBadgeClass(string priority)
    {
        return priority?.ToLower() switch
        {
            "high" => "bg-danger",
            "medium" => "bg-warning text-dark",
            "low" => "bg-info text-dark",
            _ => "bg-secondary"
        };
    }

    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "open" => "bg-danger",
            "closed" => "bg-secondary",
            _ => "bg-secondary"
        };
    }
}

<style>
    .card-shadow {
        border-width: 0px !important;
    }

    .card.card-shadow {
        border-radius: 1rem;
        transition: all 0.3s ease-in-out;
    }

    .card.card-shadow:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }

    hr {
        width: 100%;
    }
</style>